@model AutoSale.Domain.ViewModels.UserReview.ViewUserReviewViewModel

@{
    ViewData["Title"] = $"Reviews of the seller {Model.UserTo.Surname} {Model.UserTo.Name} {Model.UserTo.LastName}";
}

<main class="main main-userreview-view">
    <div class="container container-userreview-view">
        
        @if (!Model.UserReviews.Any())
        {
            <div style="border-radius: 25px" class="alert alert-primary py-4" role="alert">
                @if (Model.IsAuthenticated && Model.CurrentUserId == Model.UserTo.Id)
                {
                    <div class="h1 text-center fw-bold mb-0">You have not received any review yet</div>
                }
                else
                {
                    <div class="h1 text-center fw-bold mb-0">This seller has not received any reviews yet</div>
                    if (Model.IsAuthenticated)
                    {
                        <div class="h2 text-center fw-bold pt-2 mb-0">But you can <a asp-controller="UserReview" asp-action="Create" asp-route-id="@Model.UserTo.Id" >leave</a> it</div>
                    }
                }
            </div>
        }
        else
        {
            @if (Model.IsAuthenticated && Model.CurrentUserId == Model.UserTo.Id)
            {
                <h1 class="mb-3">Reviews about you:</h1>
            }
            else
            {
                <h1 class="mb-3">Reviews of the seller:<br>@Model.UserTo.Surname @Model.UserTo.Name @Model.UserTo.LastName</h1>
            }
            
            @foreach (var userReview in Model.UserReviews)
            {
                <div class="card card-for-review-@userReview.Id mb-4" style="border-radius: 25px; overflow: hidden">
                    <h5 class="card-header py-2 fw-bold d-flex align-items-center justify-content-between">
                        <p class="p-0 m-0">
                            @userReview.UserFrom.Surname @userReview.UserFrom.Name @userReview.UserFrom.LastName
                            @if (Model.IsAuthenticated && userReview.UserIdFrom == Model.CurrentUserId)
                            {
                                <span>(You)</span>
                            }
                        </p>
                        <p style="font-weight: initial !important;" class="p-0 m-0">@userReview.DateOfCreation.ToString("dd.MM.yyyy HH:mm")</p>
                    </h5>
                    <div class="card-body">
                        <h5 class="card-title">@userReview.Title</h5>
                        <pre style="white-space: pre-wrap !important;" class="card-text">@userReview.Text</pre>
                        @if (Model.IsAuthenticated && userReview.UserIdFrom == Model.CurrentUserId)
                        {
                            <button data-bs-toggle="modal" data-bs-target="#confirm-delete-review-@userReview.Id" type="button" class="btn btn-danger delete-btn">Delete</button>
                            <a class="btn btn-primary">Edit</a>
                        }
                    </div>
                </div>
                @if (Model.IsAuthenticated && userReview.UserIdFrom == Model.CurrentUserId)
                {
                    <div class="modal modal-for-review-@userReview.Id modal-confirm-delete-review fade" id="confirm-delete-review-@userReview.Id" tabindex="-1" aria-hidden="false">
                        <div class="modal-dialog modal-dialog-centered">
                            <div style="border-radius: 25px;" class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Confirmation</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <p>Do you really want to delete this review?</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-no-action primary-color-bg primary-color-hover" data-bs-dismiss="modal">Cancel</button>
                                    <button data-userreviewid="@userReview.Id" type="button" class="btn btn-danger delete-user-review" data-bs-dismiss="modal">Delete</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        }
    </div>
</main>
@section Scripts{
    <script defer>
    
    $(document).ready(function () {
    
        let currentReviewsCount = Number(@Model.UserReviews.Count);
    
        function getAlert() {
            return `<div style="border-radius: 25px" class="alert alert-primary py-4" role="alert">
                        <div class="h1 text-center fw-bold mb-0">This seller has not received any reviews yet</div>
                        <div class="h2 text-center fw-bold pt-2 mb-0">But you can <a href="/UserReview/Create/@Model.UserTo.Id" >leave</a> it</div>
                    </div>`;
        }
        
        const container = document.querySelector(".container-userreview-view");
    
        container.addEventListener("click", (e) =>{
            
            const target = e.target;
        
            if (target.classList.contains('delete-user-review')) {
            
                $.ajax({
                    url: "/UserReview/Delete",
                    method: "POST",
                    data: {
                        id: target.dataset.userreviewid,
                    },
                    success: function (response) {
                        const reviewsAfterDeleting = currentReviewsCount - 1;
                        if (reviewsAfterDeleting === 0) {
                            
                            container.innerHTML = getAlert();
                            
                        } else if (reviewsAfterDeleting >= 1) {
                            
                            const card = document.querySelector(`.card-for-review-${target.dataset.userreviewid}`);
                            card.remove();
                            const modal = document.querySelector(`.modal-for-review-${target.dataset.userreviewid}`);
                            modal.remove();
                        }
                        
                        currentReviewsCount -= 1;
                    },
                    error: function () {
                        
                    },
                    dataType: "json"
                });
            
            }
        });
    
    });
    
    </script>
}
