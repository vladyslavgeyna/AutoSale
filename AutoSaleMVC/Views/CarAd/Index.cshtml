@inject ICarImageService carImageService
@using X.PagedList.Mvc.Core
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using AutoSale.Service.Interfaces
@using AutoSale.Domain.Enum.Car
@using AutoSale.Domain.Helpers
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core.Common
@using AutoSale.Domain.Enum
@model AutoSale.Domain.ViewModels.CarAd.IndexCarAdViewModel

@{
    ViewData["Title"] = "Car ads";
}

<main class="main main-car-ad-index d-flex flex-column justify-content-between" style="row-gap: 30px">
    <div class="container container-car-ad-index " >
        @if (Model.CarAds.Any())
        {
            <div class="mb-3 d-flex align-items-start align-items-md-center justify-content-md-between gap-3 flex-column flex-md-row flex" >
                <button data-bs-toggle="modal" data-bs-target="#filter-open-modal" type="button" class="btn btn-success btn-filter fw-bold"><i class="fa-solid fa-filter pe-1"></i>Filtering and sorting</button>
                <p class="m-0 h4 fw-bold">Ads were found for your request: <span style="font-weight: 1000">@Model.AllCarAdsCount</span></p>
            </div>
        }
        
        <div class="modal modal-filter-open-modal fade" id="filter-open-modal" tabindex="-1" aria-hidden="false">
            <div class="modal-dialog modal-dialog-centered" style="max-width: 800px !important;" >
                <form asp-action="Index" asp-controller="CarAd" method="get" style="border-radius: 25px;" class="modal-content">
                    <div class="modal-header py-2">
                        <h5 class="modal-title">Filtration</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body py-3 d-flex flex-column flex-md-row ">
                        <div class="col-12 col-md-6 pe-md-3">
                            <div class="mb-2">
                                <select asp-for="CarBrandId" asp-items="@Model.CarBrands" class="form-select" id="inputCarBrand" >
                                    <option disabled selected>Brand</option>
                                </select>
                            </div>
                            <div class="mb-2">
                                <select asp-for="CarModelId" asp-items="@Model.CarModels" class="form-select" id="inputCarModel" >
                                    <option disabled selected >Model</option>
                                </select>
                            </div>
                            <div class="mb-2 mb-md-0">
                                <select asp-for="Region" asp-items="Html.GetEnumSelectList<Region>()" class="form-select" id="inputRegion" >
                                    <option disabled selected >Region</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-12 col-md-6 mb-2">
                            <div class="mb-2 d-flex gap-1 align-items-center">
                                <label for="inputYearFrom" class="form-label m-0">Year:&nbsp;</label>
                                <select asp-for="YearFrom" class="form-select" id="inputYearFrom" >
                                    <option disabled selected >From</option>
                                    @for (int i = DateTime.Now.Year; i >= 1900; i--)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                </select>
                                <select asp-for="YearTo" class="form-select" id="inputYearTo" >
                                    <option disabled selected >To</option>
                                    @for (int i = DateTime.Now.Year; i >= 1900; i--)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                </select>
                            </div>
                            <div class="mb-2 d-flex gap-1 align-items-center">
                                <label for="inputPriceFrom" class="form-label m-0">Price&nbsp;$:&nbsp;</label>
                                <input asp-for="PriceFrom" type="text" placeholder="From" class="form-control inputPrice" id="inputPriceFrom" >
                                <input asp-for="PriceTo" type="text" placeholder="To" class="form-control inputPrice" id="inputPriceTo" >
                            </div>
                            <div class="d-flex align-items-center">
                                <label for="inputOrderBy" class="form-label m-0">Сортувати&nbsp;за:&nbsp;</label>
                                <select asp-for="CarAdsOrderByOptions" asp-items="Html.GetEnumSelectList<CarAdsOrderByOptions>()" class="form-select" id="inputOrderBy" ></select>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer py-2">
                        <button type="button" class="btn btn-no-action primary-color-bg primary-color-hover" data-bs-dismiss="modal">Cancel</button>
                        <a asp-action="Index" asp-controller="CarAd" class="btn btn-warning btn-reset">Reset</a>
                        <button type="submit" class="btn btn-primary btn-yes">Apply</button>
                    </div>
                </form>
            </div>
        </div>
        
        
        
        <div class="row row-cols-xxl-3 g-xxl-5 row-cols-xl-3 g-xl-3 row-cols-lg-2 g-lg-3 row-cols-md-2 g-md-4 row-cols-1 g-5">
            @if (!Model.CarAds.Any())
            {
                <div class="h1 fw-bold text-center w-100">At the moment there are no ads or they were not found</div>
            }
            else
            {
                @foreach (var carAd in Model.CarAds)
                {
                    <div class="col">
                        <div class="card h-100" >
                            <div class="card-wrapper h-100">
                                <div class="car-top">
                                    <div class="m-2 image-wrapper ">
                                        <a asp-controller="CarAd" asp-action="View" asp-route-id="@carAd.Id">
                                            <img src="~/images/@((await carImageService.GetMainCarImageByCarIdAsync(carAd.CarId, true)).Data.Image.Name)" class="card-img-top " alt="@carAd.Title">
                                        </a>
                                    </div>
                                    <div class="card-body pb-0">
                                        <a asp-controller="CarAd" asp-action="View" asp-route-id="@carAd.Id" class="card-title h5 mb-2">@carAd.Title</a>
                                        <p class="card-text card-price mb-2">@((int)carAd.Car.Price) @carAd.Car.Currency.Sign</p>
                                        <div class="row row-cols-sm-2 row-cols-1 mb-3 gy-1">
                                            <div class="col">
                                                <div class="info">
                                                    <i class="bi bi-speedometer"></i>
                                                    <p class="m-0">@carAd.Car.Mileage thousand km.</p>
                                                </div>
                                            </div>
                                            <div class="col">
                                                <div class="info">
                                                    <i class="bi bi-fuel-pump-fill"></i>
                                                    @if (@carAd.Car.Fuel is Fuel.Electric)
                                                    {
                                                        <p class="m-0">@EnumHelper.GetEnumDisplayName(carAd.Car.Fuel)</p>
                                                    }
                                                    else
                                                    {
                                                        <p class="m-0">@EnumHelper.GetEnumDisplayName(carAd.Car.Fuel), @carAd.Car.EngineCapacity liters</p>
                                                    }
                                                </div>
                                            </div>
                                            <div class="col">
                                                <div class="info">
                                                    <i class="bi bi-gear-wide"></i>
                                                    <p class="m-0">@EnumHelper.GetEnumDisplayName(carAd.Car.Transmission)</p>
                                                </div>
                                            </div>
                                            <div class="col">
                                                <div class="info">
                                                    <i class="bi bi-vinyl-fill"></i>
                                                    <p class="m-0">@carAd.Car.WheelDrive.ToString()</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-bottom">
                                    <div class="card-body pt-0">
                                        <a asp-controller="CarAd" asp-action="View" asp-route-id="@carAd.Id" class="btn btn-view primary-color-bg primary-color-hover w-100">View</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }

        </div>
    </div>
    @if (Model.CarAds.Any())
    {
        <div class="container container-car-ad-index d-flex justify-content-center">
            @Html.PagedListPager(Model.CarAds, 
                page => Url.Action("Index", "CarAd", new { page }), 
                new PagedListRenderOptions()
                {
                    DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToIndividualPages = true,
                    MaximumPageNumbersToDisplay = 3,
                    LinkToPreviousPageFormat = "&lt;",
                    LinkToNextPageFormat = "&gt;",
                    LinkToLastPageFormat = "»",
                    LinkToFirstPageFormat = "«",
                    ContainerDivClasses = new[] { "pagination-container" },
                    UlElementClasses = new[] { "pagination" },
                    LiElementClasses = new[] { "page-item" },
                    PageClasses = new[] { "page-link" },
                    DisplayEllipsesWhenNotShowingAllPageNumbers = false
                })
        </div>
    }
</main>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<script defer >
    $(document).ready(function () {
        const btnsPrice = document.querySelectorAll(".inputPrice");
        const btnPriceFrom = document.getElementById("inputPriceFrom");
        const btnPriceTo = document.getElementById("inputPriceTo");
        const form = document.querySelector("form.modal-content");
        window.addEventListener("load", () => {
            if (btnPriceFrom.value == 0) {
                btnPriceFrom.value = "";
            }
            if (btnPriceTo.value == 0) {
                btnPriceTo.value = "";
            }
        })
        
        form.addEventListener("submit", () => {
            const inputOrderBy = document.getElementById("inputOrderBy");
            if (inputOrderBy.value == 1) {
                inputOrderBy.removeAttribute("name");
            } else{
                inputOrderBy.setAttribute("name", "CarAdsOrderByOptions");
            }
            if (btnPriceFrom.value == "") {
                btnPriceFrom.removeAttribute("name");
            } else{
                btnPriceFrom.setAttribute("name", "PriceFrom");
            }
            if (btnPriceTo.value == "") {
                btnPriceTo.removeAttribute("name");
            } else {
                btnPriceTo.setAttribute("name", "PriceTo");
            }
        });
        
        btnPriceFrom.addEventListener("change", (event) => {
            if (btnPriceTo.value != "" && Number(event.target.value) > Number(btnPriceTo.value)) {
                event.target.value = "";
            }
        });
        btnPriceTo.addEventListener("change", (event) => {
            if (btnPriceFrom.value != "" && Number(event.target.value) < Number(btnPriceFrom.value)) {
                event.target.value = "";
            }
        });
        btnsPrice.forEach(item => item.addEventListener("input", (event) => {
            event.target.value = event.target.value.replace(/[^\d]/g, '');
        }));
        const btnReset = document.querySelector(".btn-reset");
        const selectYearFrom = document.getElementById("inputYearFrom");
        const selectYearTo = document.getElementById("inputYearTo");
        selectYearFrom.addEventListener("change", (event) => {
            if (selectYearTo.value == "To") {
                let today = new Date();
                let yearNow = today.getFullYear();
                makeYearFromAndToSelect(event.target.value, yearNow, selectYearTo, "To");
            }
        });
        selectYearTo.addEventListener("change", (event) => {
            console.log(selectYearFrom.value);
            if (selectYearFrom.value == "From") {
                makeYearFromAndToSelect(1900, event.target.value, selectYearFrom, "From");
            }
        });

        function makeYearFromAndToSelect(minYear, maxYear, select, title) {
            select.innerHTML = "";
            const option = document.createElement("option");
            option.setAttribute("disabled", "disabled");
            option.setAttribute("selected", "selected");
            option.innerHTML = title;
            select.appendChild(option);
            for (let i = maxYear; i >= minYear; i--) {
                const option = document.createElement("option");
                option.setAttribute("value", i);
                option.innerHTML = i;
                select.appendChild(option);
            }
        }

        btnReset.addEventListener("click", () => {
            const select = document.getElementById("inputCarModel");
            select.innerHTML = "";
            const option = document.createElement("option");
            option.setAttribute("disabled", "disabled");
            option.setAttribute("selected", "selected");
            option.innerHTML = "Model";
            select.appendChild(option);
            let today = new Date();
            let yearNow = today.getFullYear();
            makeYearFromAndToSelect(1900, yearNow, selectYearFrom, "From");
            makeYearFromAndToSelect(1900, yearNow, selectYearTo, "To");
        });


        function createCarModelsSelect(modelsList) {
            const select = document.getElementById("inputCarModel");
            if (modelsList !== null) {
                select.innerHTML = "";
                const option = document.createElement("option");
                option.setAttribute("disabled", "disabled");
                option.setAttribute("selected", "selected");
                option.innerHTML = "Model";
                select.appendChild(option);
                for (let i = 0; i < modelsList.length; i++) {
                    const option = document.createElement("option");
                    option.setAttribute("value", modelsList[i].id);
                    option.innerHTML = modelsList[i].name;
                    select.appendChild(option);
                }
            } else {
                select.innerHTML = "";
                const option = document.createElement("option");
                option.setAttribute("disabled", "disabled");
                option.setAttribute("selected", "selected");
                option.innerHTML = "Model";
                select.appendChild(option);
            }
        }
        let inputCarBrand = document.getElementById("inputCarBrand");
        inputCarBrand.addEventListener("change", () => {
            let value = inputCarBrand.value;
            $.ajax({
                url: "/CarModel/GetAll",
                method: "POST",
                data: {
                    carBrandId: Number(value),
                },
                success: function (response) {
                    createCarModelsSelect(response);
                },
                dataType: "json"
            });
        })
    });
</script>